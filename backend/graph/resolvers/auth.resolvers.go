package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"

	"git.las.iastate.edu/SeniorDesignComS/2023spr/sop/auth"
	"git.las.iastate.edu/SeniorDesignComS/2023spr/sop/errors"
	"git.las.iastate.edu/SeniorDesignComS/2023spr/sop/graph/generated"
)

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, email string, password string) (bool, error) {
	user := auth.GetUserFromContext(ctx)
	if user != nil {
		return false, errors.NewForbiddenError(ctx, "You are already logged in.")
	}

	userId, err := r.UserService.ValidateLogin(ctx, email, password)
	if err != nil {
		return false, err
	}

	token, err := r.UserService.CreateUserSession(ctx, *userId)
	if err != nil {
		return false, err
	}

	request := auth.GetRequestFromContext(ctx)
	request.SetAuthToken(*token)

	return true, nil
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
