package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"

	"git.las.iastate.edu/SeniorDesignComS/2023spr/sop/auth"
	"git.las.iastate.edu/SeniorDesignComS/2023spr/sop/graph/generated"
	"git.las.iastate.edu/SeniorDesignComS/2023spr/sop/graph/model"
)

// Me is the resolver for the me field.
func (r *queryResolver) Me(ctx context.Context) (*model.User, error) {
	authUser := auth.GetUserFromContext(ctx)
	if authUser == nil {
		return nil, nil
	}

	user, err := r.UserService.GetUserById(ctx, authUser.ID)
	if err != nil {
		return nil, err
	}

	return user, nil
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
